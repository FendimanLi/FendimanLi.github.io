{"title":"CSS的浮动和定位","date":"2018-07-13T08:03:58.000Z","link":"2018/07/13/CSS的浮动和定位","comments":true,"updated":"2019-08-31T10:22:54.865Z","content":"<h3 id=\"CSS的浮动和定位以及BFC\">CSS的浮动和定位以及BFC<a href=\"2018/07/13/CSS的浮动和定位#CSS的浮动和定位以及BFC\"></a></h3><h4 id=\"一、引言\">一、引言<a href=\"2018/07/13/CSS的浮动和定位#一、引言\"></a></h4><p>在谈CSS的浮动和定位之前，首先先来看一下CSS的标准文档流特性（默认写的网页布局都是在标准文档流下）</p>\n<p>1.行内、行内块元素在一行显示时会有空白折叠现象；</p>\n<p>2.在标准文档流中的元素的布局默认情况下是从左到右，从上到下一次布局；</p>\n<p>3.图片和文字在一起时默认是高矮不等，基线对齐；</p>\n<p>4.只有标准文档流下，才分行内，块级和行内块级元素。</p>\n<p>那么什么情况下不在标准文档流下呢？</p>\n<p>1.浮动：脱标          float:left/right</p>\n<p>2.定位：也会脱标（不是所有的定位都会脱标）</p>\n<h4 id=\"二、Float（浮动）\">二、Float（浮动）<a href=\"2018/07/13/CSS的浮动和定位#二、Float（浮动）\"></a></h4><h5 id=\"1-什么是CSS浮动？\">1. 什么是CSS浮动？<a href=\"2018/07/13/CSS的浮动和定位#1-什么是CSS浮动？\"></a></h5><p><img src=\"/2018/07/13/CSS的浮动和定位/1.png\" alt class=\"article-img\"></p>\n<p>CSS 的 Float（浮动），会使元素向左或向右移动，其周围的元素也会重新排列。</p>\n<p>Float（浮动），往往是用于图像，但它在布局时一样非常有用。</p>\n<h5 id=\"2-元素怎样浮动\">2. 元素怎样浮动<a href=\"2018/07/13/CSS的浮动和定位#2-元素怎样浮动\"></a></h5><p>元素的水平方向浮动，意味着元素只能左右移动而不能上下移动。</p>\n<p>一个浮动元素会尽量向左或向右移动，直到它的外边缘碰到包含框或另一个浮动框的边框为止。</p>\n<p>浮动元素之后的元素将围绕它。</p>\n<p>浮动元素之前的元素将不会受到影响。</p>\n<h5 id=\"3-浮动的特性：\">3. 浮动的特性：<a href=\"2018/07/13/CSS的浮动和定位#3-浮动的特性：\"></a></h5><p>1.脱标：不再遵循标准文档流特性；</p>\n<p>2.贴边：浮动的元素会紧密联系在一起；</p>\n<p>3.字围：浮动的元素能挡住没有浮动的元素，但是挡不住没有浮动元素的文字；</p>\n<p><img src=\"/2018/07/13/CSS的浮动和定位/3.png\" alt class=\"article-img\"></p>\n<p>4.收缩：如果没有给浮动的元素设置宽高，默认的收缩为内容的宽高。</p>\n<p><img src=\"/2018/07/13/CSS的浮动和定位/4.png\" alt class=\"article-img\"></p>\n<h5 id=\"4-浮动的属性有哪些？\">4. 浮动的属性有哪些？<a href=\"2018/07/13/CSS的浮动和定位#4-浮动的属性有哪些？\"></a></h5><p><img src=\"/2018/07/13/CSS的浮动和定位/2.png\" alt class=\"article-img\"></p>\n<p>介绍清除浮动之前，我们首先得要知道浮动带来的影响。</p>\n<p>① 父亲不可以被浮动的孩子撑开高度，也意味着父亲没有高度。</p>\n<p>② 当浮动的子元素的高度大于父亲的高度时，此时会对父亲后面的兄弟中文字布局产生影响，父亲后面兄弟中文</p>\n<p>会贴着浮动的子元素后面进行布局。</p>\n<h5 id=\"5-清除浮动的五种方法\">5. 清除浮动的五种方法<a href=\"2018/07/13/CSS的浮动和定位#5-清除浮动的五种方法\"></a></h5><p>（1）给父亲设置overflow:hidden     BFC特性：在BFC里面父亲会计算脱标孩子的高度</p>\n<p>（2）可以使用隔墙法（用的不多）：在影响的元素之间加上一堵墙</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clear: left/right/both;</span><br><span class=\"line\">&lt;div style=&quot;clear:both&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></div></figure>\n\n<p>（3）给父亲一个确定的高度（用的也不多）</p>\n<p>（4）使用after伪元素清除浮动（加在父元素上面）</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.clearfix &#123;</span><br><span class=\"line\">    *zoom: 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.clear::after &#123;</span><br><span class=\"line\">    clear:both;</span><br><span class=\"line\">    height:0;</span><br><span class=\"line\">    overflow:hidden;</span><br><span class=\"line\">    display:block;</span><br><span class=\"line\">    visibilty:hidden;</span><br><span class=\"line\">    content:&quot;.&quot;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>（5）使用before和after双伪元素清除浮动，同样给父亲添加</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.clearfix::before,.clearfix::after &#123;</span><br><span class=\"line\">    content:&quot;&quot;;</span><br><span class=\"line\">    display:table;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.clearfix:after &#123;</span><br><span class=\"line\">    clear:both;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.clearfix &#123;</span><br><span class=\"line\">   *zoom: 1; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<h4 id=\"三、Position（定位）\">三、Position（定位）<a href=\"2018/07/13/CSS的浮动和定位#三、Position（定位）\"></a></h4><h5 id=\"1-position-属性指定了元素的定位类型\">1. position 属性指定了元素的定位类型<a href=\"2018/07/13/CSS的浮动和定位#1-position-属性指定了元素的定位类型\"></a></h5><p>position 属性的五个值：static、relative、fixed、absolute、sticky<br>元素可以使用的顶部，底部，左侧和右侧属性定位。然而，这些属性无法工作，除非是先设定position属性。他们也有不同的工作方式，这取决于定位方法。</p>\n<h5 id=\"2-相对定位与绝对定位\">2. 相对定位与绝对定位<a href=\"2018/07/13/CSS的浮动和定位#2-相对定位与绝对定位\"></a></h5><p>a.相对定位（不脱标）position:relative</p>\n<p>形影不离，老家留坑。</p>\n<p>top/left只有定位了的盒子才能使用。</p>\n<p>b.绝对定位（会脱标）position:absolute</p>\n<p>参考系是父亲。</p>\n<p>子绝父相、子绝父绝：以父亲为参考系。</p>\n<p>居中问题：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box&#123;</span><br><span class=\"line\">    position: absolute;</span><br><span class=\"line\">    left: 50%;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    height: 100px;</span><br><span class=\"line\">    margin-left: -50px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<h5 id=\"3-固定定位（脱标）\">3. 固定定位（脱标）<a href=\"2018/07/13/CSS的浮动和定位#3-固定定位（脱标）\"></a></h5><p>position: fixed;</p>\n<p>参考系是浏览器窗口左上角。</p>\n<p>介绍完浮动和定位，接下来在介绍几个CSS的其他属性。</p>\n<h5 id=\"4-sticky-定位\">4. sticky 定位<a href=\"2018/07/13/CSS的浮动和定位#4-sticky-定位\"></a></h5><p>sticky 英文字面意思是粘，粘贴，所以可以把它称之为粘性定位。</p>\n<p>position: sticky; 基于用户的滚动位置来定位。</p>\n<p>粘性定位的元素是依赖于用户的滚动，在 position:relative 与 position:fixed 定位之间切换。</p>\n<p>它的行为就像 position:relative; 而当页面滚动超出目标区域时，它的表现就像 position:fixed;，它会固定在目标位置。</p>\n<p>元素定位表现为在跨越特定阈值前为相对定位，之后为固定定位。</p>\n<p>这个特定阈值指的是 top, right, bottom 或 left 之一，换言之，指定 top, right, bottom 或 left 四个阈值其中之一，才可使粘性定位生效。否则其行为与相对定位相同。</p>\n<p>注意: Internet Explorer, Edge 15 及更早 IE 版本不支持 sticky 定位。 Safari 需要使用 -webkit- prefix (查看以下实例)。</p>\n<p><img src=\"/2018/07/13/CSS的浮动和定位/7.png\" alt class=\"article-img\"></p>\n<h4 id=\"四、其他属性\">四、其他属性<a href=\"2018/07/13/CSS的浮动和定位#四、其他属性\"></a></h4><h5 id=\"1-z-index\">1. z-index<a href=\"2018/07/13/CSS的浮动和定位#1-z-index\"></a></h5><p><img src=\"/2018/07/13/CSS的浮动和定位/5.png\" alt class=\"article-img\"></p>\n<p><img src=\"/2018/07/13/CSS的浮动和定位/6.png\" alt class=\"article-img\"></p>\n<p>结论1：只有定位了的盒子才有z-index，它可以用来控制定位了的盒子的z轴顺序，它的值越大越靠前.</p>\n<p>结论2：对于定位的盒子，如果有重叠的区域，谁盖住谁取决于哪个写在后面，定位了的盒子的z轴顺序</p>\n<p>大于没有定位的盒子。</p>\n<h5 id=\"2-元素的隐藏\">2. 元素的隐藏<a href=\"2018/07/13/CSS的浮动和定位#2-元素的隐藏\"></a></h5><p>display:none； 会让元素隐藏，同时隐藏元素不占用空间。</p>\n<p>display:hidden; 会让元素隐藏，但是隐藏的元素仍然会占用空间。</p>\n<h5 id=\"3-其他CSS属性\">3. 其他CSS属性<a href=\"2018/07/13/CSS的浮动和定位#3-其他CSS属性\"></a></h5><p>cursor:default  小白箭头/pointer 小手/move 移动/text 文本</p>\n<h5 id=\"4-vertical-align\">4. vertical:align<a href=\"2018/07/13/CSS的浮动和定位#4-vertical-align\"></a></h5><p>图片和文字在一起时默认是基线对齐,如果要修改对齐方式，我们需要设置vertical的属性。</p>\n<p>baseline：基线对齐、bottom：底线对齐、middle：中线对齐、top：顶线对齐</p>\n<h5 id=\"5-关于inline-box的问题\">5.关于inline-box的问题<a href=\"2018/07/13/CSS的浮动和定位#5-关于inline-box的问题\"></a></h5><p>（1） 元素的高度不是由文字来决定的，是由line-height决定的</p>\n<p>（2） vertical-align起作用的前提是元素为inline水平元素或table-cell元素，包括span，img，input，button，</p>\n<p>td以及通过display改变显示水平为inline水平或者table-cell元素</p>\n<p>（3）四种内联盒子：</p>\n<p>① containing box：外层盒子模型，包含了其他的boxes，包含了若干行</p>\n<p>②line boxes：指的是若干和行内元素组成的一行</p>\n<p>③inline boxes： 一行中的若干个行内、行内块级元素，如span、a、em等</p>\n<p>标签以及匿名inline boxes（即不含把标签的裸露文字）</p>\n<p>④content area：行内盒子的内容区域，如span标签对应内容的区域</p>\n<p>（4）在CSS可视化格式模型文档中，指出了inline-box的基线是正常流中最后一个inline box的基线。</p>\n<p>（5）对于空白的inline-box以及添加overflow:hidden属性的inline-block，其基线为margin：buttom边缘</p>\n<p>所处的位置，即底部边缘。</p>\n<h4 id=\"五、BFC—块级格式化上下文\">五、BFC—块级格式化上下文<a href=\"2018/07/13/CSS的浮动和定位#五、BFC—块级格式化上下文\"></a></h4><h5 id=\"—–-gt-1-如何开启BFC？\">—–&gt;1. 如何开启BFC？<a href=\"2018/07/13/CSS的浮动和定位#—–-gt-1-如何开启BFC？\"></a></h5><ol>\n<li><p>根元素</p>\n</li>\n<li><p>float属性不为none</p>\n</li>\n<li><p>position为absolute或fixed</p>\n</li>\n<li><p>diaplay为inline-block,table-cell，table-caption,flex，inline-flex</p>\n</li>\n<li><p>overflow：visible</p>\n<p>一般情况下开启BFC用overflow:hidden。</p>\n<h5 id=\"—–-gt-2-BFC的布局特性\"><a href=\"2018/07/13/CSS的浮动和定位#—–-gt-2-BFC的布局特性\" class=\"headerlink\" title=\"—–&gt;2. BFC的布局特性\"></a>—–&gt;2. BFC的布局特性</h5><p>1、顶端到垂直一个个顺序排列；</p>\n<p>2、盒子垂直方向的距离由margin决定，属于同一个BFC的两个相邻盒子的margin会发生重叠；</p>\n<p>3、在BFC中每一个盒子的左边缘会触碰到容器的右边缘；</p>\n<p>4、BFC的区域不会与浮动的盒子产生交集，而是紧贴浮动边缘；</p>\n<p>5、计算BFC的高度时，自然也会坚持浮动或者定位的盒子高度；</p>\n<p>6、BFC就是页面上的一个隔离容器，容器里面的子元素不会影响到外面的元素。</p>\n</li>\n</ol>\n","prev":{"title":"CSS样式的深入浅出","link":"2018/07/26/CSS样式的深入浅出-1"},"plink":"http://Li_junhui.github.io.git/2018/07/13/CSS的浮动和定位/"}