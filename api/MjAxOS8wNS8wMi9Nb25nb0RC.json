{"title":"MongoDB","date":"2019-05-02T04:51:49.000Z","link":"2019/05/02/MongoDB","comments":true,"updated":"2019-09-02T05:05:31.725Z","content":"<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//缓存---&gt;文件---&gt;关系型数据库</span></span><br><span class=\"line\"><span class=\"comment\">//1.数据保存到内存：</span></span><br><span class=\"line\">优点：</span><br><span class=\"line\"><span class=\"number\">1</span>）读写非常快</span><br><span class=\"line\">缺点：</span><br><span class=\"line\"><span class=\"number\">1</span>）程序关闭导致数据丢失</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2.数据保存到文件：</span></span><br><span class=\"line\">优点：</span><br><span class=\"line\"><span class=\"number\">1</span>）数据可以永久保存</span><br><span class=\"line\">缺点：</span><br><span class=\"line\"><span class=\"number\">1</span>）频繁地IO操作，效率不高！</span><br><span class=\"line\"><span class=\"number\">2</span>）数据管理不方便。例如查询某个数据需要全部读取出来，再匹配。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//3.数据保存到数据库软件：</span></span><br><span class=\"line\">优点：</span><br><span class=\"line\"><span class=\"number\">1</span>）数据永久保存下来</span><br><span class=\"line\"><span class=\"number\">2</span>）数据管理非常方便。（例如查询非常快速和方便）</span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"关系型数据库\">关系型数据库<a href=\"2019/05/02/MongoDB#关系型数据库\"></a></h3><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">关系型数据库（Mysql和Oracle） ： 表和表、表和字段、数据和数据存在着关系</span><br><span class=\"line\"></span><br><span class=\"line\">优点:</span><br><span class=\"line\"><span class=\"number\">1.</span>数据之间有关系，进行数据的增删改查的时候是非常方便的</span><br><span class=\"line\"><span class=\"number\">2.</span>关系型数据库是有事务操作的，保证数据的完整性和一致性。</span><br><span class=\"line\"></span><br><span class=\"line\">缺点：</span><br><span class=\"line\"><span class=\"number\">1.</span>因为数据和数据是有关系的，底层是运行了大量的算法。大量算法会降低系统的效率，会降低性能</span><br><span class=\"line\"><span class=\"number\">2.</span>数据存在硬盘中，面对海量数据的增删改查的时候会显的无能为力，面对海量数据对数据进行维护变得非常的无力</span><br><span class=\"line\"><span class=\"number\">3.</span>限制字段：比如现在数据库中已经有<span class=\"number\">10</span>万条数据了（在今天<span class=\"number\">10</span>万条都不算大数据），如果想从下一条数据开始增加一些字段，此时之前的<span class=\"number\">10</span>万条数据都需要一同被更改。SQL中，表的字段是不能自由更改的，不能某一个条目有一些字段，另外的条目的没有。</span><br><span class=\"line\"></span><br><span class=\"line\">适合处理一般量级的数据（银行转账和钱）</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Oracle，甲骨文公司的产品。 当前最流行应用最广泛的数据库软件。适合中大型，中大应用。</span><br><span class=\"line\">SQL Server: 是微软公司的产品。window平台应用非常广泛。和c#，net平台兼容非常好。</span><br><span class=\"line\">DB2： IBM公司的产品。</span><br><span class=\"line\">MySQL: 开源组织的产品。甲骨文公司的产品。免费</span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"非关系型数据库\">非关系型数据库<a href=\"2019/05/02/MongoDB#非关系型数据库\"></a></h3><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">非关系数据库的（redis和MangDB）。</span><br><span class=\"line\">为了处理海量数据，非关系数据库设计之初就是为了替代关系型数据库的</span><br><span class=\"line\"></span><br><span class=\"line\">优点：</span><br><span class=\"line\"><span class=\"number\">1.</span>数据维护在缓存中，海量数据的增删改查和维护和处理非常轻松</span><br><span class=\"line\"><span class=\"number\">2.</span>非关系型数据库简单易部署，基本都是开源软件</span><br><span class=\"line\"><span class=\"number\">3.</span>非关系型数据库存储格式是key,value形式、文档形式、图片形式等等，所以可以存储基础类型以及对象或者是集合等各种格式，非常灵活</span><br><span class=\"line\"></span><br><span class=\"line\">缺点：</span><br><span class=\"line\"><span class=\"number\">1.</span>数据和数据没有关系，他们之间就是单独存在的</span><br><span class=\"line\"><span class=\"number\">2.</span>数据维护在内存中，当有海量数据的时候会非常占内存，而内存的价格会比较高</span><br><span class=\"line\"></span><br><span class=\"line\">适合处理海量数据，保证效率，不一定安全（统计数据，例如微博数据）</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">MongoDB</span><br><span class=\"line\">Redis</span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"非关系型数据库的分类\">非关系型数据库的分类<a href=\"2019/05/02/MongoDB#非关系型数据库的分类\"></a></h3><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">键值类数据库 ： Redis</span><br><span class=\"line\"></span><br><span class=\"line\">列存储数据库  :  HBase</span><br><span class=\"line\"></span><br><span class=\"line\">文档类数据库  : MongoDB</span><br><span class=\"line\"></span><br><span class=\"line\">图形数据库  : Graph</span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"mongoDB的介绍\">mongoDB的介绍<a href=\"2019/05/02/MongoDB#mongoDB的介绍\"></a></h3><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MongoDB是一个高性能、开源、无模式的文档型数据库，设计用于提供高性能、水平可扩性、高可用性和高级可查询性，为Web应用提供可扩展的高性能数据存储解决方案。</span><br><span class=\"line\"></span><br><span class=\"line\">MongoDB的名称取自单词”humogous”中间的几个字符，是很大、巨大的意思。该数据库由<span class=\"number\">10</span>gen公司开发并提供技术支持，它属于NoSQL数据库家族中的一员，在许多场景下可以用来替代传统关系型数据库或key/value存储方式。</span><br></pre></td></tr></table></div></figure>\n\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MongoDB的设计目标是高性能、可扩展、易部署、易使用，存储数据非常方便。其主要功能特性如下： </span><br><span class=\"line\">(<span class=\"number\">1</span>) 面向集合存储，容易存储对象类型的数据。在MongoDB中数据被分组存储在集合中，集合类似RDBMS中的表，一个集合可以存储无限多的文档。 </span><br><span class=\"line\">(<span class=\"number\">2</span>) 模式自由，采用无模式结构存储。在MongoDB里的集合中，存储的是无模式的文档，采用无模式存储数据是集合(Collection)区别于RDBMS中的表(Table)的一个重要特征。 </span><br><span class=\"line\">(<span class=\"number\">3</span>) 支持完全索引，可以在任意属性上建立索引，包含内部对象。MongoDB的索引和RDBMS的索引基本一样，可以在指定属性、内部对象上创建索引以提高查询的速度。除此之外，MongoDB还可以提供创建基于地理空间的索引的能力。 </span><br><span class=\"line\">(<span class=\"number\">4</span>) 支持查询。MongoDB支持丰富的查询操作，MongoDB几乎支持SQL中的大部分查询。 </span><br><span class=\"line\">(<span class=\"number\">5</span>) 强大的聚合工具。MongoDB除了提供丰富的查询功能外，还提供强大的聚合工具，如count、group等，支持使用MapReduce完成复杂的聚合任务。 </span><br><span class=\"line\">(<span class=\"number\">6</span>) 支持复制和数据恢复。MongoDB支持主从复制机制，可以实现数据备份、故障恢复、读扩展等功能。而基于副本集的复制机制提供了自动故障恢复的功能，确保了集群数据不会丢失。 </span><br><span class=\"line\">(<span class=\"number\">7</span>) 使用高效的二进制数据存储，包括大型对象(如视频)。使用二进制格式存储，可以保存任何类型的数据对象。 </span><br><span class=\"line\">(<span class=\"number\">8</span>) 自动处理分片，以支持云计算层次的扩展。MongoDB支持集群自动切分数据，对数据进行分片可以使集群存储更多的数据，实现更大的负载，也能保证存储的负载均衡。</span><br><span class=\"line\">      https:<span class=\"comment\">//cloud.tencent.com/developer/article/1138683</span></span><br><span class=\"line\">(9) 支持Perl、PHP、Java、C# 、JavaScript、Ruby、C和C++语言的驱动程序，Mon提供了当前所有主流开发语言的数据库驱动包，开发人员使用任何一种主流开发语言都可以轻松编程，实现访问MongoDB数据库。 </span><br><span class=\"line\">(<span class=\"number\">10</span>) 文件存储格式为BSON(<span class=\"built_in\">JSON</span>的一种拓展)。BSON是二进制格式<span class=\"built_in\">JSON</span>的简称，BSON支持文档和数组的嵌套。 </span><br><span class=\"line\">(<span class=\"number\">11</span>) 可以通过网络远程访问MongoDB数据库。</span><br></pre></td></tr></table></div></figure>\n\n<h2 id=\"安装\">安装<a href=\"2019/05/02/MongoDB#安装\"></a></h2><p>1、安装mongodb数据库 下载链接</p>\n<p> 注意 安装时不要勾选安装图形化界面。</p>\n<p>2、安装NoSQLBooster for MongoDB</p>\n<h2 id=\"配置\">配置<a href=\"2019/05/02/MongoDB#配置\"></a></h2><p>1、将mongodb安装目录下的bin路径，添加至系统环境变量path中</p>\n<p>2、在c盘根目录下新建data文件夹，在data文件夹中新建db文件夹</p>\n<h2 id=\"检测\">检测<a href=\"2019/05/02/MongoDB#检测\"></a></h2><p>在cmd下键入</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongod --version</span><br></pre></td></tr></table></div></figure>\n\n<p>若正确显示版本号，则安装配置成功</p>\n<h2 id=\"启动\">启动<a href=\"2019/05/02/MongoDB#启动\"></a></h2><p>1.启动MongoDB数据库 会默认使用C:/data/db作为数据存储目录，所以在使用mongod命令之前需要先在c盘中新建一个data目录，在data目录下新建db目录，才能启动成功</p>\n<p>在cmd下键入</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongod <span class=\"comment\">//启动数据库</span></span><br></pre></td></tr></table></div></figure>\n\n<p>在cmd下键入</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongod --datapath=数据存储目录    <span class=\"comment\">//修改mongoDB默认数据存储目录</span></span><br><span class=\"line\">mongod –dbpath 数据存储目录  <span class=\"comment\">//启动</span></span><br></pre></td></tr></table></div></figure>\n\n<h2 id=\"链接\">链接<a href=\"2019/05/02/MongoDB#链接\"></a></h2><p>在cmd下键入</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongo   <span class=\"comment\">//链接数据库</span></span><br><span class=\"line\">exit    <span class=\"comment\">//断开链接</span></span><br></pre></td></tr></table></div></figure>\n\n<h2 id=\"关闭\">关闭<a href=\"2019/05/02/MongoDB#关闭\"></a></h2><p>在cmd下按下</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctrl + c</span><br></pre></td></tr></table></div></figure>\n\n<h2 id=\"mongo数据库操作\">mongo数据库操作<a href=\"2019/05/02/MongoDB#mongo数据库操作\"></a></h2><h3 id=\"NoSQLBooster中mongode使用\">NoSQLBooster中mongode使用<a href=\"2019/05/02/MongoDB#NoSQLBooster中mongode使用\"></a></h3><p>才使用mongo之前先给出常用命令</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show dbs        <span class=\"comment\">//显示所有的数据库</span></span><br><span class=\"line\">use library       <span class=\"comment\">//使用某个数据库</span></span><br><span class=\"line\">db                 <span class=\"comment\">//显示当前使用的数据库</span></span><br><span class=\"line\"><span class=\"comment\">//向library中的books集合中插入一条数据 (虽然一开始没有library仓库和books集合，但是不妨碍我们使用)</span></span><br><span class=\"line\">db.books.insertOne(&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"tom\"</span>&#125;)    </span><br><span class=\"line\">show  collections    <span class=\"comment\">//显示当前library仓库下的所有集合</span></span><br><span class=\"line\">db.books.find()   <span class=\"comment\">//显示igeek仓库下的books集合中的所有数据</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//再插入一条数据</span></span><br><span class=\"line\">db.books.insertOne(&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"kitty\"</span>,<span class=\"string\">\"age\"</span>:<span class=\"number\">18</span>&#125;)</span><br><span class=\"line\">db.books.find()  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//删除数据库</span></span><br><span class=\"line\">db.dropDatabase()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//在当前数据库下创建集合</span></span><br><span class=\"line\">db.createCollection(<span class=\"string\">\"igeek\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//删除当前仓库下的igeek集合</span></span><br><span class=\"line\">db.igeek.drop()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//插入文档</span></span><br><span class=\"line\">db.igeek.insert(&#123;<span class=\"attr\">name</span>:<span class=\"string\">\"hello\"</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//删除指定的文档数据</span></span><br><span class=\"line\">db.igeek.remove(&#123;<span class=\"string\">'name'</span>:<span class=\"string\">'hello'</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//更新文档数据</span></span><br><span class=\"line\">db.igeek.update(</span><br><span class=\"line\">    &#123;<span class=\"attr\">name</span>:<span class=\"string\">\"hello\"</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">$set</span>:&#123;<span class=\"attr\">name</span>:<span class=\"string\">\"xxx\"</span>&#125;&#125;,</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">        <span class=\"comment\">//upsert:true 如果要更新的文档不存在会插入一条新的记录</span></span><br><span class=\"line\">        upsert:<span class=\"literal\">true</span>,</span><br><span class=\"line\">        multi:<span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//根据id更新数据</span></span><br><span class=\"line\"><span class=\"comment\">//save方法有更新和插入两种功能，到底是插入还是更新文档取决于save的参数。</span></span><br><span class=\"line\">db.igeek.save(&#123;</span><br><span class=\"line\">    <span class=\"string\">\"_id\"</span> : ObjectId(<span class=\"string\">\"5c09f5deaf853bfb8a003425\"</span>),</span><br><span class=\"line\">    <span class=\"string\">\"name\"</span> : <span class=\"string\">\"kkk\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"tags\"</span> : [</span><br><span class=\"line\">            <span class=\"string\">\"mongodb\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"NoSQL\"</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"string\">\"likes\"</span> : <span class=\"number\">110</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></div></figure>\n\n<p><strong>新建链接</strong></p>\n<p>打开NoSQLBooster for MongoDB –&gt; connect –&gt; create –&gt; save &amp; connect</p>\n<p><img src=\"/2019/05/02/MongoDB/a.png\" alt class=\"article-img\"></p>\n<p><strong>创建一个数据库并写入一条文件</strong></p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">use library  <span class=\"comment\">//指定使用library数据库  此时db关键字就代表library了</span></span><br><span class=\"line\">db.books.insertOne(&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"红楼梦\"</span>&#125;)  <span class=\"comment\">//向library数据库中的books集合新增一条数据</span></span><br></pre></td></tr></table></div></figure>\n\n<p><strong>通过NoSQLBooster for MongoDB将文件内容写入数据库</strong></p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.在桌面创建这个文件，JSON和JSON之间没有逗号：</span></span><br><span class=\"line\">&#123;<span class=\"string\">\"uname\"</span>:<span class=\"string\">\"李灵黛\"</span>,<span class=\"string\">\"age\"</span>:<span class=\"number\">12</span>,<span class=\"string\">\"sex\"</span>:<span class=\"string\">\"男\"</span>,<span class=\"string\">\"provice\"</span>:<span class=\"string\">\"上海\"</span>&#125;</span><br><span class=\"line\">&#123;<span class=\"string\">\"uname\"</span>:<span class=\"string\">\"柳辰飞\"</span>,<span class=\"string\">\"age\"</span>:<span class=\"number\">13</span>,<span class=\"string\">\"sex\"</span>:<span class=\"string\">\"女\"</span>,<span class=\"string\">\"provice\"</span>:<span class=\"string\">\"北京\"</span>&#125;</span><br><span class=\"line\">&#123;<span class=\"string\">\"uname\"</span>:<span class=\"string\">\"江城子\"</span>,<span class=\"string\">\"age\"</span>:<span class=\"number\">17</span>,<span class=\"string\">\"sex\"</span>:<span class=\"string\">\"男\"</span>,<span class=\"string\">\"provice\"</span>:<span class=\"string\">\"广东\"</span>&#125;</span><br><span class=\"line\">&#123;<span class=\"string\">\"uname\"</span>:<span class=\"string\">\"萧合凰\"</span>,<span class=\"string\">\"age\"</span>:<span class=\"number\">37</span>,<span class=\"string\">\"sex\"</span>:<span class=\"string\">\"女\"</span>,<span class=\"string\">\"provice\"</span>:<span class=\"string\">\"河北\"</span>&#125;</span><br><span class=\"line\">&#123;<span class=\"string\">\"uname\"</span>:<span class=\"string\">\"西粼宿\"</span>,<span class=\"string\">\"age\"</span>:<span class=\"number\">16</span>,<span class=\"string\">\"sex\"</span>:<span class=\"string\">\"男\"</span>,<span class=\"string\">\"provice\"</span>:<span class=\"string\">\"广东\"</span>&#125;</span><br><span class=\"line\">&#123;<span class=\"string\">\"uname\"</span>:<span class=\"string\">\"千湄\"</span>,<span class=\"string\">\"age\"</span>:<span class=\"number\">13</span>,<span class=\"string\">\"sex\"</span>:<span class=\"string\">\"女\"</span>,<span class=\"string\">\"provice\"</span>:<span class=\"string\">\"广东\"</span>&#125;</span><br><span class=\"line\">&#123;<span class=\"string\">\"uname\"</span>:<span class=\"string\">\"林墨瞳\"</span>,<span class=\"string\">\"age\"</span>:<span class=\"number\">13</span>,<span class=\"string\">\"sex\"</span>:<span class=\"string\">\"女\"</span>,<span class=\"string\">\"provice\"</span>:<span class=\"string\">\"吉林\"</span>&#125;</span><br><span class=\"line\">&#123;<span class=\"string\">\"uname\"</span>:<span class=\"string\">\"柳婵诗\"</span>,<span class=\"string\">\"age\"</span>:<span class=\"number\">14</span>,<span class=\"string\">\"sex\"</span>:<span class=\"string\">\"女\"</span>,<span class=\"string\">\"provice\"</span>:<span class=\"string\">\"河北\"</span>&#125;</span><br><span class=\"line\">&#123;<span class=\"string\">\"uname\"</span>:<span class=\"string\">\"李念儿\"</span>,<span class=\"string\">\"age\"</span>:<span class=\"number\">19</span>,<span class=\"string\">\"sex\"</span>:<span class=\"string\">\"女\"</span>,<span class=\"string\">\"provice\"</span>:<span class=\"string\">\"广东\"</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2.运行命令导入数据</span></span><br><span class=\"line\">$ mongoimport -d 仓库名 -c 集合名 C:\\Users\\Danny\\Desktop\\<span class=\"number\">1.</span>txt</span><br><span class=\"line\"></span><br><span class=\"line\">-d参数表示需要往哪个数据库中导入数据</span><br><span class=\"line\">-c 参数表示需要往哪个集合(表)中导入数据</span><br></pre></td></tr></table></div></figure>\n\n<p>在NoSQLBooster for MongoDB中输入命令可以对数据库进行操作，此处不加赘述，仅介绍通过node如何对数据库进行增删改查操作</p>\n<h3 id=\"node中mongo的使用\">node中mongo的使用<a href=\"2019/05/02/MongoDB#node中mongo的使用\"></a></h3><p>node中对mongo数据库的操作需要用到 mongoose包</p>\n<p> mongoose关于Model给出的关于操作数据的常用API</p>\n<p>首先要创建Model对象，如obb,具体创建过程，下文有述</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">///////////////////////////////</span></span><br><span class=\"line\"><span class=\"comment\">//增 将obb数据对象添加到集合中</span></span><br><span class=\"line\">obb.save().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//回调刚刚保存的数据对象</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//当一个页面发出post保存表单数据到数据库中时的操作</span></span><br><span class=\"line\">router.post(<span class=\"string\">'/add'</span>,(req,res)=&gt;&#123;</span><br><span class=\"line\">    <span class=\"comment\">//添加id</span></span><br><span class=\"line\">    req.body._id = mongoose.Types.ObjectId();</span><br><span class=\"line\">    <span class=\"comment\">//声明一个Student Model</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> stu = <span class=\"keyword\">new</span> Student();</span><br><span class=\"line\">    <span class=\"comment\">//将表单数据浅拷贝到stu Model对象中</span></span><br><span class=\"line\">    <span class=\"built_in\">Object</span>.assign(stu,req.body);</span><br><span class=\"line\">    <span class=\"comment\">//保存</span></span><br><span class=\"line\">    stu.save().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        res.redirect(<span class=\"string\">'/student/studentList'</span>);</span><br><span class=\"line\">    &#125;,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>)</span>&#123;</span><br><span class=\"line\">        res.render(<span class=\"string\">'studentAdd.html'</span>,&#123;<span class=\"attr\">err_msg</span>:err.message&#125;)</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">///////////////////////////////</span></span><br><span class=\"line\"><span class=\"comment\">//删</span></span><br><span class=\"line\">Book.remove(&#123;<span class=\"attr\">name</span>:<span class=\"string\">\"红楼梦\"</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">msg</span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//回调刚刚删除的数据对象</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">///////////////////////////////</span></span><br><span class=\"line\"><span class=\"comment\">//改</span></span><br><span class=\"line\"><span class=\"comment\">//new 默认为false 返回修改之前的数据     true返回修改之后的数据</span></span><br><span class=\"line\">Book.findByIdAndUpdata(_id,&#123;要加入数据库的对象&#125;,&#123;<span class=\"attr\">new</span>:<span class=\"literal\">true</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">///////////////////////////////</span></span><br><span class=\"line\"><span class=\"comment\">//查</span></span><br><span class=\"line\">Book.find();<span class=\"comment\">//查询所有数据</span></span><br><span class=\"line\"><span class=\"comment\">//Book.find().then(function(data)&#123;&#125;);//中返回的data是封装过的对象，我们要的数据其实是data._doc</span></span><br><span class=\"line\">Book.find(&#123; <span class=\"attr\">name</span>: <span class=\"string\">'红楼梦'</span>, <span class=\"attr\">price</span>: &#123; <span class=\"attr\">$gte</span>: <span class=\"number\">20</span> &#125;&#125;); <span class=\"comment\">//加入查询条件  与</span></span><br><span class=\"line\">Book.find(&#123;<span class=\"attr\">$or</span>:[&#123;<span class=\"attr\">name</span>:<span class=\"string\">'三国演义'</span>&#125;,&#123;<span class=\"attr\">price</span>:&#123;<span class=\"attr\">$gte</span>:<span class=\"number\">20</span>&#125;&#125;]); <span class=\"comment\">//加入查询条件  或</span></span><br><span class=\"line\">Book.findOne(条件);          </span><br><span class=\"line\">Book.findById();</span><br></pre></td></tr></table></div></figure>\n\n<h4 id=\"1、新建node项目（文件夹）\">1、新建node项目（文件夹）<a href=\"2019/05/02/MongoDB#1、新建node项目（文件夹）\"></a></h4><h4 id=\"2、在项目中安装第三方包-mongoose\">2、在项目中安装第三方包 mongoose<a href=\"2019/05/02/MongoDB#2、在项目中安装第三方包-mongoose\"></a></h4><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm init -y</span><br><span class=\"line\">npm install mongoose</span><br></pre></td></tr></table></div></figure>\n\n<h4 id=\"3-新建js文件（如server-js）\">3.新建js文件（如server.js）<a href=\"2019/05/02/MongoDB#3-新建js文件（如server-js）\"></a></h4><h5 id=\"1）引入mongoose\">1）引入mongoose<a href=\"2019/05/02/MongoDB#1）引入mongoose\"></a></h5><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">'mongoose'</span>)；</span><br></pre></td></tr></table></div></figure>\n\n<h5 id=\"2）建立连接\">2）建立连接<a href=\"2019/05/02/MongoDB#2）建立连接\"></a></h5><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//mongoose.connect('mongodb://域名/数据库名', &#123;useNewUrlParser: true&#125;);</span></span><br><span class=\"line\">mongoose.connect(<span class=\"string\">'mongodb://localhost:27017/library'</span>, &#123;<span class=\"attr\">useNewUrlParser</span>: <span class=\"literal\">true</span>&#125;);</span><br></pre></td></tr></table></div></figure>\n\n<h5 id=\"3）连接对象的回调\">3）连接对象的回调<a href=\"2019/05/02/MongoDB#3）连接对象的回调\"></a></h5><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> db = mongoose.connection;<span class=\"comment\">//拿到链接对象</span></span><br><span class=\"line\">db.on(<span class=\"string\">'error'</span>, <span class=\"built_in\">console</span>.error.bind(<span class=\"built_in\">console</span>, <span class=\"string\">'connection error:'</span>));<span class=\"comment\">//</span></span><br><span class=\"line\">db.once(<span class=\"string\">'open'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// we're connected!</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></div></figure>\n\n<h5 id=\"4-创建一个schema\">4)创建一个schema<a href=\"2019/05/02/MongoDB#4-创建一个schema\"></a></h5><p>这个schema是与数据库中表的schema是一一对应的</p>\n<p><strong>这种机制是ORM object relational model 对象关系映射模型</strong></p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> bookSchema = <span class=\"keyword\">new</span> mongoose.Schema(&#123;</span><br><span class=\"line\">  name: <span class=\"built_in\">String</span></span><br><span class=\"line\">  <span class=\"comment\">//是否全部借出</span></span><br><span class=\"line\">   isLendAll: <span class=\"built_in\">Boolean</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></div></figure>\n\n<p>schema数据类型除了String类型 还有以下几种</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">• <span class=\"built_in\">String</span></span><br><span class=\"line\">• <span class=\"built_in\">Number</span></span><br><span class=\"line\">• <span class=\"built_in\">Date</span></span><br><span class=\"line\">• <span class=\"built_in\">Boolean</span></span><br><span class=\"line\">• Buffer   <span class=\"comment\">//流，音频 视频等文件可以由此保存</span></span><br><span class=\"line\">• ObjectId  <span class=\"comment\">// 使用  mongoose.Schema.Types.ObjectId</span></span><br><span class=\"line\">• Mixed   <span class=\"comment\">//混合数据格式  使用  mongoose.Schema.Types.Mixed</span></span><br><span class=\"line\">• <span class=\"built_in\">Array</span></span><br></pre></td></tr></table></div></figure>\n\n<p>schema数据字段中还可以更细化的限制其取值，例：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> bookSchema = <span class=\"keyword\">new</span> mongoose.Schema(&#123;</span><br><span class=\"line\">    name: &#123;</span><br><span class=\"line\">        type: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">        minlength: <span class=\"number\">1</span>,<span class=\"comment\">//规定字符串最小长度</span></span><br><span class=\"line\">        maxlenght:<span class=\"number\">10</span> <span class=\"comment\">//规定字符串最大长度</span></span><br><span class=\"line\">        match:   <span class=\"comment\">//限定字符串格式，正则表达式</span></span><br><span class=\"line\">    &#125;<span class=\"built_in\">String</span></span><br><span class=\"line\">    price: &#123;</span><br><span class=\"line\">    type: <span class=\"built_in\">Number</span>,</span><br><span class=\"line\">    min: <span class=\"number\">0</span>, <span class=\"comment\">//限定最小值</span></span><br><span class=\"line\">    max: <span class=\"number\">100</span> <span class=\"comment\">//限定最大值</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    <span class=\"comment\">//是否全部借出</span></span><br><span class=\"line\">    isLendAll:&#123;</span><br><span class=\"line\">    type: <span class=\"built_in\">Boolean</span>,</span><br><span class=\"line\">    enum: [<span class=\"number\">0</span>,<span class=\"number\">1</span>],  <span class=\"comment\">//枚举 用数据限定isLendAll可以取到的值</span></span><br><span class=\"line\">    <span class=\"keyword\">default</span>: <span class=\"number\">0</span>   <span class=\"comment\">//默认值</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></div></figure>\n\n<h5 id=\"5-新建一个model对象\">5)新建一个model对象<a href=\"2019/05/02/MongoDB#5-新建一个model对象\"></a></h5><p>此时 Book对象 与 数据库中books集合形成一一对应关系，对Book的操作，便是对集合books的操作，接下来的操作都是建立在此基础上的。</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Book = mongoose.model(<span class=\"string\">'book'</span>, bookSchema); <span class=\"comment\">//注意此处创建对象时，model中入参 'book' 时，那么数据库中对应的集合应该以 books 命名，不然无法对响应表进行操作</span></span><br></pre></td></tr></table></div></figure>\n\n<h5 id=\"查询一条数据\">查询一条数据<a href=\"2019/05/02/MongoDB#查询一条数据\"></a></h5><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Book.find(&#123;<span class=\"attr\">name</span>: <span class=\"string\">'红楼梦'</span>&#125;,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err,arr</span>)</span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(err)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(arr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">//打印结果 [ &#123; _id: 5cf3c3f19cad171ee8e202ca, name: '红楼梦' &#125; ]</span></span><br><span class=\"line\"><span class=\"comment\">//是一个数组  就算只有一条数据 最后得到的数据也是数组</span></span><br></pre></td></tr></table></div></figure>\n\n","prev":{"title":"ES6语法","link":"2019/06/22/ES6语法"},"next":{"title":"webpack的基本使用","link":"2019/04/02/webpack的基本使用"},"plink":"http://Li_junhui.github.io.git/2019/05/02/MongoDB/","toc":[{"title":"安装","id":"安装","index":"1"},{"title":"配置","id":"配置","index":"2"},{"title":"检测","id":"检测","index":"3"},{"title":"启动","id":"启动","index":"4"},{"title":"链接","id":"链接","index":"5"},{"title":"关闭","id":"关闭","index":"6"},{"title":"mongo数据库操作","id":"mongo数据库操作","index":"7","children":[{"title":"NoSQLBooster中mongode使用","id":"NoSQLBooster中mongode使用","index":"7.1"},{"title":"node中mongo的使用","id":"node中mongo的使用","index":"7.2","children":[{"title":"1、新建node项目（文件夹）","id":"1、新建node项目（文件夹）","index":"7.2.1"},{"title":"2、在项目中安装第三方包 mongoose","id":"2、在项目中安装第三方包-mongoose","index":"7.2.2"},{"title":"3.新建js文件（如server.js）","id":"3-新建js文件（如server-js）","index":"7.2.3"}]}]}]}