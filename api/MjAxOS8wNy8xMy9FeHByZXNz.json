{"title":"Express","date":"2019-07-13T05:13:27.000Z","link":"2019/07/13/Express","comments":true,"updated":"2019-09-02T05:14:12.526Z","content":"<h1 id=\"Express\">Express<a href=\"2019/07/13/Express#Express\"></a></h1><p>是基于Node.js平台，快速、开放极简的web开发框架</p>\n<p>初始化</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm init -y  //加-y时 会以默认参数创建package.json文件   若不加 可以自定义package.json参数信息</span><br></pre></td></tr></table></div></figure>\n\n<p>安装</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install express -save</span><br></pre></td></tr></table></div></figure>\n\n<p>自动重启服务器工具</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install nodemon  //若要使用该工具  在启动服务器时要使用nodemon命令 如 nodemon ./server.js</span><br></pre></td></tr></table></div></figure>\n\n<p>路径的匹配</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//匹配student开头，而且后面跟了学号   http://localhost:8000/student/1234</span><br><span class=\"line\">app.get(&quot;/student/:id/:name&quot;,function(req,res)&#123;</span><br><span class=\"line\">    var id = req.params[&quot;id&quot;];</span><br><span class=\"line\">    var name = req.params[&quot;name&quot;];</span><br><span class=\"line\">    res.send(id+name);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></div></figure>\n\n<h2 id=\"中间件的另一种使用方式\">中间件的另一种使用方式<a href=\"2019/07/13/Express#中间件的另一种使用方式\"></a></h2><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const express = require(&apos;express&apos;);</span><br><span class=\"line\">const app = express();</span><br><span class=\"line\"></span><br><span class=\"line\">var f1 = (req,res,next)=&gt;&#123;</span><br><span class=\"line\">    console.log(1);</span><br><span class=\"line\">    next();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">var f2 = (req,res,next)=&gt;&#123;</span><br><span class=\"line\">    console.log(2);</span><br><span class=\"line\">    next();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">var f3 = (req,res,next)=&gt;&#123;</span><br><span class=\"line\">    console.log(3);</span><br><span class=\"line\">    res.send();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">app.use(&apos;/user&apos;,[f1,f2,f3]);</span><br><span class=\"line\">app.listen(3000,()=&gt;&#123;</span><br><span class=\"line\">    console.log(&apos;running...&apos;);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></div></figure>\n\n<h2 id=\"next注意点\">next注意点<a href=\"2019/07/13/Express#next注意点\"></a></h2><p>有如下代码：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const express = require(&apos;express&apos;);</span><br><span class=\"line\">const app = express();</span><br><span class=\"line\"></span><br><span class=\"line\">//无门槛进入  只要是localhost:3000就会响应</span><br><span class=\"line\">app.use((req,res,next)=&gt;&#123;</span><br><span class=\"line\">    console.log(&apos;有用户进入...函数一&apos;);</span><br><span class=\"line\">    next(); //通关文牒</span><br><span class=\"line\">&#125;,(req,res,next)=&gt;&#123;  </span><br><span class=\"line\">   \tconsole.log(&apos;有用户进入...函数二&apos;);</span><br><span class=\"line\">    next();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">app.use(&apos;/user&apos;,(req,res,next)=&gt;&#123;</span><br><span class=\"line\">    console.log(&apos;访问结束&apos;);</span><br><span class=\"line\">    res.send(&apos;用户页面&apos;+total);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">app.listen(3000,()=&gt;&#123;</span><br><span class=\"line\">    console.log(&apos;running...&apos;);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></div></figure>\n\n<p><strong>next() 不加参数时会指向下一个执行函数，即函数一中的next()会指向函数二</strong></p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const express = require(&apos;express&apos;);</span><br><span class=\"line\">const app = express();</span><br><span class=\"line\"></span><br><span class=\"line\">//无门槛进入  只要是localhost:3000就会响应</span><br><span class=\"line\">app.use((req,res,next)=&gt;&#123;</span><br><span class=\"line\">    console.log(&apos;有用户进入...函数一&apos;);</span><br><span class=\"line\">    next(&apos;/user&apos;); //通关文牒</span><br><span class=\"line\">&#125;,(req,res,next)=&gt;&#123;  </span><br><span class=\"line\">   \tconsole.log(&apos;有用户进入...函数二&apos;);</span><br><span class=\"line\">    next();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">app.use(&apos;/user&apos;,(req,res,next)=&gt;&#123;</span><br><span class=\"line\">    console.log(&apos;访问结束&apos;);</span><br><span class=\"line\">    res.send(&apos;用户页面&apos;+total);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">app.listen(3000,()=&gt;&#123;</span><br><span class=\"line\">    console.log(&apos;running...&apos;);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></div></figure>\n\n<p><strong>next(‘/user’) 加参数时，会跳转至下一个路径为/user的use函数，即跳过函数二直接来到下一个use函数</strong></p>\n<h2 id=\"body-parser的使用\">body-parser的使用<a href=\"2019/07/13/Express#body-parser的使用\"></a></h2><p><strong>作用：可以获取post请求中信息</strong></p>\n<p>安装</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install body-parser --save</span><br></pre></td></tr></table></div></figure>\n\n<p>使用</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const express = require(&apos;express&apos;);</span><br><span class=\"line\">const app = express();</span><br><span class=\"line\">const bodyParser = require(&apos;body-parser&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">//若要获取post中的参数 则必须以此挂载bodyparser中间件</span><br><span class=\"line\">app.use(bodyParser.urlencoded(&#123;extended: false&#125;));</span><br><span class=\"line\"></span><br><span class=\"line\">app.use(express.static(&apos;views&apos;));</span><br><span class=\"line\"></span><br><span class=\"line\">app.post(&apos;/login&apos;,(req,res)=&gt;&#123;</span><br><span class=\"line\">    res.send(&apos;name:&apos;+req.body.username);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">app.listen(3000,()=&gt;&#123;</span><br><span class=\"line\">    console.log(&apos;running...&apos;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></div></figure>\n\n<h2 id=\"错误处理中间件\">错误处理中间件<a href=\"2019/07/13/Express#错误处理中间件\"></a></h2><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const express = require(&apos;express&apos;);</span><br><span class=\"line\">const app = express();</span><br><span class=\"line\"></span><br><span class=\"line\">app.get(&apos;/index&apos;,(req,res,next)=&gt;&#123;</span><br><span class=\"line\">    try&#123;</span><br><span class=\"line\">    \tlet a = null;</span><br><span class=\"line\">        console.log(a.toString()); //null不能调用toString()  此处故意制造错误</span><br><span class=\"line\">        next();</span><br><span class=\"line\">    &#125;catch(e)&#123;</span><br><span class=\"line\">        next(e); //转至错误处理中间件</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">//错误处理中间件（注意。错误处理中间件 要用use）</span><br><span class=\"line\">app.use((err,req,res,next)=&gt;&#123;</span><br><span class=\"line\">    // res.send(err); 无法打印</span><br><span class=\"line\">    res.send(err.toString());</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">app.listen(3000,()=&gt;&#123;</span><br><span class=\"line\">    console.log(&apos;running...&apos;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></div></figure>\n\n<h2 id=\"指定静态资源\">指定静态资源<a href=\"2019/07/13/Express#指定静态资源\"></a></h2><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const express = require(&apos;express&apos;);</span><br><span class=\"line\">const app = express();</span><br><span class=\"line\"></span><br><span class=\"line\">app.use(express.static(&apos;views&apos;));//指定views文件夹为静态资源文件夹  若该文件夹中存在login.html 则可以通过http:localhost:3000/login.html来直接访问该页面</span><br></pre></td></tr></table></div></figure>\n\n<h2 id=\"Router类的使用\">Router类的使用<a href=\"2019/07/13/Express#Router类的使用\"></a></h2><p>1、先创建一个需要js文件，每一个js文件就是一个类</p>\n<p>每一个js文件中的写法</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const express = require(&apos;express&apos;);</span><br><span class=\"line\">const router = express.Router(); //创建router类</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">router.get(&apos;/c1&apos;,(req,res)=&gt;&#123;  //设置请求响应函数  /c1为访问路径</span><br><span class=\"line\">    res.send(&apos;/c1&apos;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">router.post(&apos;/c2&apos;,(req,res)=&gt;&#123;//设置请求响应函数</span><br><span class=\"line\">    res.send(&apos;/c2&apos;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">module.exports = router;  //将router暴露出去</span><br></pre></td></tr></table></div></figure>\n\n<p>2、当创建若干js文件（类）之后，用一个js文件进行汇总使用，相当于入口文件 此处创建server.js</p>\n<p>写法</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const express = require(&apos;express&apos;);</span><br><span class=\"line\">const app = express();</span><br><span class=\"line\"></span><br><span class=\"line\">const chang = require(&apos;./chang&apos;); //引入自定义的类</span><br><span class=\"line\">//...</span><br><span class=\"line\"></span><br><span class=\"line\">app.use(&apos;/chang&apos;,chang);  //访问方式 localhost:3000/chang/c1     //此处用use指定的/chang只是虚拟路径 并不存在真实的物理路径</span><br><span class=\"line\">//app.use(chang);   //访问方式 localhost:3000/c1 </span><br><span class=\"line\">//...</span><br><span class=\"line\">//app.use(.....)</span><br><span class=\"line\"></span><br><span class=\"line\">app.listen(3000,()=&gt;&#123;</span><br><span class=\"line\">    console.log(&apos;running...&apos;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></div></figure>\n\n<p>这种使用方式相当于自定义了中间件后，再在server中使用。</p>\n<h2 id=\"art-template的使用\">art-template的使用<a href=\"2019/07/13/Express#art-template的使用\"></a></h2><h3 id=\"art-template在前台的使用\">art-template在前台的使用<a href=\"2019/07/13/Express#art-template在前台的使用\"></a></h3><p><strong>下载</strong><a href=\"http://aui.github.io/art-template/docs/installation.html\" target=\"_blank\" rel=\"noopener\">art-template-web</a></p>\n<p>1、将art-template-web.js引入到页面</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=&quot;./template-web.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></div></figure>\n\n<p>2、在页面中定义一个模板</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">//此script标签相当于一个容器</span><br><span class=\"line\">&lt;script id=&quot;test&quot; type=&quot;text/html&quot;&gt; //注意 此处一定要加上  type=&quot;text/html&quot;</span><br><span class=\"line\">    &#123;&#123;each users&#125;&#125;</span><br><span class=\"line\">        &lt;h1&gt;&#123;&#123;$value.name&#125;&#125;&lt;/h1&gt;</span><br><span class=\"line\">        &lt;li&gt;&#123;&#123;$value.age&#125;&#125;&lt;/li&gt;</span><br><span class=\"line\">        &lt;li&gt;&#123;&#123;$value.gender&#125;&#125;&lt;/li&gt;</span><br><span class=\"line\">        &lt;li&gt;&#123;&#123;$value.love&#125;&#125;&lt;/li&gt;</span><br><span class=\"line\">    &#123;&#123;/each&#125;&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    var data = &#123;</span><br><span class=\"line\">        users:[&#123;name: &apos;张三&apos;, age: 12, gender: &apos;女&apos;, love: &apos;唱&apos;&#125;,</span><br><span class=\"line\">               &#123;name: &apos;李四&apos;, age: 13, gender: &apos;男&apos;, love: &apos;跳&apos;&#125;,</span><br><span class=\"line\">               &#123;name: &apos;王五&apos;, age: 14, gender: &apos;女&apos;, love: &apos;rap&apos;&#125;,</span><br><span class=\"line\">               &#123;name: &apos;蔡徐坤&apos;, age: 15, gender: &apos;女&apos;, love: &apos;篮球&apos;&#125;]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    //如果数组中都是对象，且要访问对象内的值时要使用$value.xxx  value代表当前遍历到的数组元素</span><br><span class=\"line\">    var html = template(&apos;test&apos;,data);</span><br><span class=\"line\">    var box = document.getElementById(&apos;box&apos;);</span><br><span class=\"line\">    box.innerHTML = html;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></div></figure>\n\n<p>另一种实现方式</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    //当使用此法时 模板字符串拼接时  每一个标签要单独用 &quot;&quot; 括起来</span><br><span class=\"line\">    var artt = &quot;&#123;&#123;each users&#125;&#125;&quot;+</span><br><span class=\"line\">        &quot;&lt;h1&gt;&#123;&#123;$value.name&#125;&#125;&lt;/h1&gt;&quot;+</span><br><span class=\"line\">        &quot;&lt;li&gt;&#123;&#123;$value.age&#125;&#125;&lt;/li&gt;&quot;+</span><br><span class=\"line\">        &quot;&lt;li&gt;&#123;&#123;$value.gender&#125;&#125;&lt;/li&gt;&quot;+</span><br><span class=\"line\">        &quot;&lt;li&gt;&#123;&#123;$value.love&#125;&#125;&lt;/li&gt;&quot;+</span><br><span class=\"line\">    &quot;&#123;&#123;/each&#125;&#125;&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">    var render = template.compile(artt);</span><br><span class=\"line\">    var data = &#123;</span><br><span class=\"line\">        users:[&#123;name: &apos;张三&apos;, age: 12, gender: &apos;女&apos;, love: &apos;唱&apos;&#125;,</span><br><span class=\"line\">                &#123;name: &apos;李四&apos;, age: 13, gender: &apos;男&apos;, love: &apos;跳&apos;&#125;,</span><br><span class=\"line\">                &#123;name: &apos;王五&apos;, age: 14, gender: &apos;女&apos;, love: &apos;rap&apos;&#125;,</span><br><span class=\"line\">                &#123;name: &apos;蔡徐坤&apos;, age: 15, gender: &apos;女&apos;, love: &apos;篮球&apos;&#125;]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    //如果数组中都是对象，且要访问对象内的值时要使用$value.xxx  value代表当前遍历到的数组元素</span><br><span class=\"line\">    var html = render(data);</span><br><span class=\"line\">    var box = document.getElementById(&apos;box&apos;);</span><br><span class=\"line\">    box.innerHTML = html;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"art-template在后台中的使用\">art-template在后台中的使用<a href=\"2019/07/13/Express#art-template在后台中的使用\"></a></h3><p>初始化</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm init -y</span><br></pre></td></tr></table></div></figure>\n\n<p>安装</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install art-template --save</span><br><span class=\"line\">npm install express-art-template --save</span><br></pre></td></tr></table></div></figure>\n\n<p>使用</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const express = require(&apos;express&apos;);</span><br><span class=\"line\">const app = express();</span><br><span class=\"line\"></span><br><span class=\"line\">//指定art-template渲染的文件后缀是html</span><br><span class=\"line\">app.engine(&apos;html&apos;,require(&apos;express-art-template&apos;));</span><br><span class=\"line\">//指定静态资源目录</span><br><span class=\"line\">app.use(express.static(&apos;views&apos;));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">app.get(&apos;/node&apos;,(req,res)=&gt;&#123;</span><br><span class=\"line\">    //当调用render()函数时，它默认会在views中寻找node.html</span><br><span class=\"line\">    //当然也可以自定义指定render()寻找的目录</span><br><span class=\"line\">    //app.set(&apos;myviews&apos;,__dirname+&apos;/myviews&apos;)</span><br><span class=\"line\">    //render是将内容渲染到node.html中</span><br><span class=\"line\">    res.render(&apos;node.html&apos;,&#123;</span><br><span class=\"line\">        name:req.query.name,</span><br><span class=\"line\">        age:req.query.age</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;).listen(3000,()=&gt;&#123;</span><br><span class=\"line\">    console.log(&apos;running...&apos;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"模板继承\">模板继承<a href=\"2019/07/13/Express#模板继承\"></a></h3><p>css.art</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">    body &#123;</span><br><span class=\"line\">        background-color: pink;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></div></figure>\n\n<p>body.art</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;h1&gt;切歌&lt;/h1&gt;</span><br></pre></td></tr></table></div></figure>\n\n<p>script.art</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    alert(&apos;script模板被使用&apos;);</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></div></figure>\n\n<p>layout.html</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=&quot;en&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class=\"line\">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;我是个被继承的html 我负责挖坑&lt;/title&gt;</span><br><span class=\"line\">    &#123;&#123;include &apos;./css.art&apos;&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&#123;&#123;include &apos;./body.art&apos;&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123;&#123;block &apos;body&apos;&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123;&#123;/block&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&#123;include &apos;./script.art&apos;&#125;&#125;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></div></figure>\n\n<p>index.html</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;extend &apos;../layout.html&apos;&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&#123;block &apos;body&apos;&#125;&#125;</span><br><span class=\"line\">    &lt;div&gt; 你来挖坑 我来填 &lt;/div&gt;</span><br><span class=\"line\">&#123;&#123;/block&#125;&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>server.js</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const express = require(&apos;express&apos;);</span><br><span class=\"line\">const app = express();</span><br><span class=\"line\"></span><br><span class=\"line\">app.engine(&apos;html&apos;,require(&apos;express-art-template&apos;));</span><br><span class=\"line\"></span><br><span class=\"line\">app.get(&apos;/index&apos;,(req,res)=&gt;&#123;</span><br><span class=\"line\">    res.render(&apos;index.html&apos;);</span><br><span class=\"line\">&#125;).listen(3000,()=&gt;&#123;</span><br><span class=\"line\">    console.log(&apos;running...&apos;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">1、&#123;&#123;include &apos; 文件名 &apos; &#125;&#125;  相当于将该文件的内容替换到该位置</span><br><span class=\"line\"></span><br><span class=\"line\">2、&#123;&#123;block &apos;body&apos;&#125;&#125;  &#123;&#123;/block&#125;&#125;  在被继承文件中 相当于占了个位置</span><br><span class=\"line\"></span><br><span class=\"line\">3、&#123;&#123;extend &apos; 文件名 &apos;&#125;&#125;    A文件继承该文件后，在A文件中的&#123;&#123;block &apos;body&apos;&#125;&#125;  &#123;&#123;/block&#125;&#125;中加入内容相当于填坑</span><br></pre></td></tr></table></div></figure>","prev":{"title":"wamp环境搭建","link":"2019/08/09/wamp环境搭建"},"next":{"title":"ES6语法","link":"2019/06/22/ES6语法"},"plink":"http://Li_junhui.github.io.git/2019/07/13/Express/","toc":[{"title":"Express","id":"Express","index":"1","children":[{"title":"中间件的另一种使用方式","id":"中间件的另一种使用方式","index":"1.1"},{"title":"next注意点","id":"next注意点","index":"1.2"},{"title":"body-parser的使用","id":"body-parser的使用","index":"1.3"},{"title":"错误处理中间件","id":"错误处理中间件","index":"1.4"},{"title":"指定静态资源","id":"指定静态资源","index":"1.5"},{"title":"Router类的使用","id":"Router类的使用","index":"1.6"},{"title":"art-template的使用","id":"art-template的使用","index":"1.7","children":[{"title":"art-template在前台的使用","id":"art-template在前台的使用","index":"1.7.1"},{"title":"art-template在后台中的使用","id":"art-template在后台中的使用","index":"1.7.2"},{"title":"模板继承","id":"模板继承","index":"1.7.3"}]}]}]}