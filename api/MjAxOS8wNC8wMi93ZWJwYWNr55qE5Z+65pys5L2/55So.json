{"title":"webpack的基本使用","date":"2019-04-02T03:28:29.000Z","link":"2019/04/02/webpack的基本使用","comments":true,"updated":"2019-09-02T04:39:56.611Z","content":"<p>1、webpack能够处理JS文件之间相互依赖的关系</p>\n<p>2、webpack能够处理JS的兼容性问题，将高级的、浏览器无法识别的语法转为低级的浏览器能识别的语法</p>\n<h2 id=\"安装\">安装<a href=\"2019/04/02/webpack的基本使用#安装\"></a></h2><p>全局安装webpack</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g webpack</span><br></pre></td></tr></table></div></figure>\n\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install webpack@<span class=\"number\">3.0</span><span class=\"number\">.0</span> -g  <span class=\"comment\">//安装指定版本</span></span><br></pre></td></tr></table></div></figure>\n\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i webpack-cli -g</span><br></pre></td></tr></table></div></figure>\n\n<h2 id=\"初体验\">初体验<a href=\"2019/04/02/webpack的基本使用#初体验\"></a></h2><p>这里以隔行换色为例：</p>\n<p>先构建文件目录如下：</p>\n<p><img src=\"/2019/04/02/webpack的基本使用/a.png\" alt class=\"article-img\"></p>\n<p>其中node_modules文件夹是安装其他包自动构建的</p>\n<p>安装我们要用到的包，这里使用了jquery</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i jquery</span><br></pre></td></tr></table></div></figure>\n\n<p>index.html中写入代码</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=<span class=\"string\">\"en\"</span>&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=<span class=\"string\">\"UTF-8\"</span>&gt;</span><br><span class=\"line\">    &lt;meta name=<span class=\"string\">\"viewport\"</span> content=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span><br><span class=\"line\">    &lt;meta http-equiv=<span class=\"string\">\"X-UA-Compatible\"</span> content=<span class=\"string\">\"ie=edge\"</span>&gt;</span><br><span class=\"line\">    &lt;title&gt;Document&lt;<span class=\"regexp\">/title&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;!-- 不推荐在这里直接引用任何css script --&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;!-- 所有的引用都在main.js中写 --&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;!-- 因为main.js中用了ES6的语法，浏览器不兼容，此时就需要webpack来预处理 --&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;!-- &lt;script src=\"./m</span>ain.js<span class=\"string\">\"&gt;&lt;/script&gt; --&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/head&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;body&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;ul&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;li&gt;这是第1个li&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;li&gt;这是第2个li&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;li&gt;这是第3个li&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;li&gt;这是第4个li&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;li&gt;这是第5个li&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;li&gt;这是第6个li&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;li&gt;这是第7个li&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;li&gt;这是第8个li&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;li&gt;这是第9个li&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;li&gt;这是第10个li&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/ul&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/body&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/html&gt;</span></span><br><span class=\"line\"><span class=\"string\">在main中写入代码</span></span><br><span class=\"line\"><span class=\"string\">//这是入口js文件</span></span><br><span class=\"line\"><span class=\"string\">//导入jquery</span></span><br><span class=\"line\"><span class=\"string\">import $ from 'jquery'</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">$(function()&#123;</span></span><br><span class=\"line\"><span class=\"string\">    $('li:odd').css('backgroundColor','skyblue');</span></span><br><span class=\"line\"><span class=\"string\">    $('li:even').css('backgroundColor','pink')</span></span><br><span class=\"line\"><span class=\"string\">&#125;)</span></span><br></pre></td></tr></table></div></figure>\n\n<p>用webpack处理mian.js</p>\n<p>命令行中键入</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">webpack ./src/main.js ./dist/bundle.js</span><br></pre></td></tr></table></div></figure>\n\n<p><code>./src/main.js</code>是要处理的文件路径</p>\n<p><code>./dist/bundle.js</code>是处理之后需要保存到的路径</p>\n<p>此时将<code>main.js</code>处理成<code>bundle.js</code>,此时我们就可以在html页面中直接引入<code>bundle.js</code>了</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=<span class=\"string\">\"../dist/bundle.js\"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></div></figure>\n\n<p>完成效果</p>\n<p><img src=\"/2019/04/02/webpack的基本使用/b.png\" alt class=\"article-img\"></p>\n<h2 id=\"基本配置文件的使用\">基本配置文件的使用<a href=\"2019/04/02/webpack的基本使用#基本配置文件的使用\"></a></h2><p>每当我们将<code>mian.js</code>中的内容做出变化时，都要手动输入 <code>webpack ./src/main.js ./dist/bundle.js</code>命令来重新生成<code>bundle.js</code>,过于麻烦，这里可以设置配置文件以达到，只需要输入<code>webpack</code>就可以达到重新生成bundle.js的目的</p>\n<p>在项目根目录下创建<code>webpack.config.js</code>文件，进行配置</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//这个配置文件，其实就是一个js文件，通过Node中的模块操作，向外暴露了一个对象</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    <span class=\"comment\">//手动指定入口 和 出口</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//入口，表示要使用webpack打包哪个文件</span></span><br><span class=\"line\">    entry: path.join(__dirname,<span class=\"string\">'./src/main.js'</span>),</span><br><span class=\"line\">    <span class=\"comment\">//输入文件相关属性</span></span><br><span class=\"line\">    output: &#123;</span><br><span class=\"line\">        path: path.join(__dirname,<span class=\"string\">'./dist'</span>),<span class=\"comment\">//指定打包好的文件，输出到哪个目录中去</span></span><br><span class=\"line\">        filename: <span class=\"string\">'bundle.js'</span> <span class=\"comment\">//指定 输出文件名称</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<h2 id=\"使用webpack-dev-server\">使用webpack-dev-server<a href=\"2019/04/02/webpack的基本使用#使用webpack-dev-server\"></a></h2><p>之前代码每做一次改变都要在命令行键入<code>webpack</code>，过于麻烦，为了进一步偷懒，我们可以利用<code>webpack-dev-server</code>工具来实现。</p>\n<h3 id=\"安装-1\">安装<a href=\"2019/04/02/webpack的基本使用#安装-1\"></a></h3><p>命令行键入</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i webpack-dev-server -D  <span class=\"comment\">//将此工具安装到项目的本地开发依赖</span></span><br></pre></td></tr></table></div></figure>\n\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i webpack -D   <span class=\"comment\">//项目中安装webpack</span></span><br></pre></td></tr></table></div></figure>\n\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i webpack-cli -D   <span class=\"comment\">//项目中安装webpack-cli</span></span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"使用\">使用<a href=\"2019/04/02/webpack的基本使用#使用\"></a></h3><p><code>webpack-dev-server</code>的使用方式同<code>webpack</code>一样，（这让我想到了<code>node</code> 与 nodemon`的关系）</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">webpack-dev-server   <span class=\"comment\">//暂不可用</span></span><br></pre></td></tr></table></div></figure>\n\n<p>注意：1、由于我们是在项目本地中安装的，无法在powershell中直接使用，我们可以在package.json中，在scripts中添加<code>&quot;dev&quot;: &quot;webpack-dev-server&quot;</code>，配置如下</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">\"name\"</span>: <span class=\"string\">\"01-webpack\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"version\"</span>: <span class=\"string\">\"1.0.0\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"description\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"main\"</span>: <span class=\"string\">\"index.js\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">\"test\"</span>: <span class=\"string\">\"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"dev\"</span>: <span class=\"string\">\"webpack-dev-server\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"string\">\"keywords\"</span>: [],</span><br><span class=\"line\">    <span class=\"string\">\"author\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"license\"</span>: <span class=\"string\">\"ISC\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"dependencies\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">\"jquery\"</span>: <span class=\"string\">\"^3.4.1\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"string\">\"devDependencies\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">\"webpack-dev-server\"</span>: <span class=\"string\">\"^3.7.2\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>2、由于webpack-dev-server是依赖于webpack的，所以我们呢必须要在项目中本地安装webpack和脚手架</p>\n<p>3、由于webpack-dev-server打包的文件并没有存放在磁盘上，而是暂存在内存中，导致我们的改变<code>main.js</code>时没有效果，它相当于在项目根目录生成了一个看不见的文件，</p>\n<p>所以我们在script引入时，应直接应用根目录下</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=<span class=\"string\">\"/bundle.js\"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"启动服务\">启动服务<a href=\"2019/04/02/webpack的基本使用#启动服务\"></a></h3><p>npm run dev</p>\n<h2 id=\"使用html-webpack-plugin\">使用html-webpack-plugin<a href=\"2019/04/02/webpack的基本使用#使用html-webpack-plugin\"></a></h2><p>使得html页面也可以被加载到内存中，提高代码开发效率</p>\n<h4 id=\"安装-2\">安装<a href=\"2019/04/02/webpack的基本使用#安装-2\"></a></h4><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i html-webpack-plugin -D</span><br></pre></td></tr></table></div></figure>\n\n<h4 id=\"使用-1\">使用<a href=\"2019/04/02/webpack的基本使用#使用-1\"></a></h4><p>在main.js中引入</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> htmlWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'html-webpack-plugin'</span>);</span><br></pre></td></tr></table></div></figure>\n\n<p>在plugins中配置</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugins: [</span><br><span class=\"line\">    <span class=\"comment\">//配置插件的节点</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.HashedModuleIdsPlugin(), <span class=\"comment\">//new 一个热更新的 模块对象 </span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> htmlWebpackPlugin(&#123;  <span class=\"comment\">//创建一个 在内存中生成HTML 页面的插件</span></span><br><span class=\"line\">        <span class=\"comment\">//指定 模板页面，将来会根据指定的页面的路径，去生成内存中的 页面</span></span><br><span class=\"line\">        template: path.join(__dirname,<span class=\"string\">'./src/index.html'</span>),</span><br><span class=\"line\">        <span class=\"comment\">// 指定 生成的页面的名称</span></span><br><span class=\"line\">        filename: <span class=\"string\">'index.html'</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">]</span><br></pre></td></tr></table></div></figure>\n\n<h2 id=\"webpack-处理第三方不是文件类型的过程\">webpack 处理第三方不是文件类型的过程<a href=\"2019/04/02/webpack的基本使用#webpack-处理第三方不是文件类型的过程\"></a></h2><ol>\n<li>当发现要处理的文件不是js文件时，回去配置文件中查找有无对应的第三方loader规则；</li>\n<li>如查找到对应规则，会调用对应的一系列loader处理此文件类型；</li>\n<li>调用use中一系列的loader时，会从后向前调用，第一个loader的处理结果会返回给下一个；loader，直到当前loader为最后一个loader；</li>\n<li>当最后一个loader处理完毕时，会将执行结构返回给webpack进行打包合并处理，并输出到bundle.js中去。</li>\n</ol>\n<h2 id=\"loader\">loader<a href=\"2019/04/02/webpack的基本使用#loader\"></a></h2><p><strong>由于webpack默认只能处理js文件，非js文件要使用loader加载器</strong></p>\n<h3 id=\"loader处理css\">loader处理css<a href=\"2019/04/02/webpack的基本使用#loader处理css\"></a></h3><p>在index.html中不推荐直接引入css，这样可能会导致客户端项服务器发送第二次请求，这里使用第三方loader，利用webpack将css打包到bundle.js中去。</p>\n<p>处理css需要两个loader加载器</p>\n<ul>\n<li>style-loader</li>\n<li>css-loader</li>\n</ul>\n<h4 id=\"安装-3\">安装<a href=\"2019/04/02/webpack的基本使用#安装-3\"></a></h4><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install style-loader css-loader -D</span><br></pre></td></tr></table></div></figure>\n\n<h4 id=\"配置\">配置<a href=\"2019/04/02/webpack的基本使用#配置\"></a></h4><p>在webpack.config.js中新增一个配置节点module，他是一个对象；在这个module对象上有一个rules属性，这个属性是一个数组，存放了所有第三方的 匹配 和 处理规则。</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">        &#123;<span class=\"attr\">test</span>: <span class=\"regexp\">/\\.css$/</span>, <span class=\"attr\">use</span>: [<span class=\"string\">'style-loader'</span>,<span class=\"string\">'css-loader'</span>]&#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<h4 id=\"使用-2\">使用<a href=\"2019/04/02/webpack的基本使用#使用-2\"></a></h4><p>在main.js中引入css</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'./css/index.css'</span></span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"loader处理less\">loader处理less<a href=\"2019/04/02/webpack的基本使用#loader处理less\"></a></h3><p>处理less需要三个个loader加载器</p>\n<ul>\n<li>style-loader</li>\n<li>css-loader</li>\n<li>less-loader</li>\n</ul>\n<h4 id=\"安装-4\">安装<a href=\"2019/04/02/webpack的基本使用#安装-4\"></a></h4><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install style-loader css-loader less-loader -D</span><br></pre></td></tr></table></div></figure>\n\n<p>注意：若之前已经安装了<code>style-loader</code> <code>css-loader</code>，仅需要安装<code>less-loader</code> 即可</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install less-loader -D</span><br></pre></td></tr></table></div></figure>\n\n<p>若要正常使用less-loader，还需要一个less依赖项，安装less</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install less -D</span><br></pre></td></tr></table></div></figure>\n\n<p>注意：此处的less是内部依赖于less-loader的，则无需再main.js中引入</p>\n<h4 id=\"配置-1\">配置<a href=\"2019/04/02/webpack的基本使用#配置-1\"></a></h4><p>在module中的rules中添加配置</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"attr\">test</span>: <span class=\"regexp\">/\\.less$/</span>, <span class=\"attr\">use</span>: [<span class=\"string\">'style-loader'</span>,<span class=\"string\">'css-loader'</span>,<span class=\"string\">'less-loader'</span>]&#125;</span><br></pre></td></tr></table></div></figure>\n\n<h4 id=\"使用-3\">使用<a href=\"2019/04/02/webpack的基本使用#使用-3\"></a></h4><p><code>main.js</code>中引入<code>index.less</code></p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'./css/index.less'</span></span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"loader处理scss\">loader处理scss<a href=\"2019/04/02/webpack的基本使用#loader处理scss\"></a></h3><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">处理less需要三个个loader加载器</span><br><span class=\"line\"></span><br><span class=\"line\">style-loader</span><br><span class=\"line\">css-loader</span><br><span class=\"line\">sass-loader (坑：这里是sass 而文件名是.scss)</span><br></pre></td></tr></table></div></figure>\n\n<h4 id=\"安装-5\">安装<a href=\"2019/04/02/webpack的基本使用#安装-5\"></a></h4><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install sass-loader -D</span><br></pre></td></tr></table></div></figure>\n\n<p>安装内部依赖项</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install node-sass -D</span><br></pre></td></tr></table></div></figure>\n\n<p>注意此处安装node-sass若失败，请切换cnpm进行安装</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install cnpm -g</span><br></pre></td></tr></table></div></figure>\n\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cnpm install node-sass -D</span><br></pre></td></tr></table></div></figure>\n\n<h4 id=\"配置-2\">配置<a href=\"2019/04/02/webpack的基本使用#配置-2\"></a></h4><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"attr\">test</span>: <span class=\"regexp\">/\\.scss$/</span>, <span class=\"attr\">use</span>: [<span class=\"string\">'style-loader'</span>,<span class=\"string\">'css-loader'</span>,<span class=\"string\">'sass-loader'</span>]&#125;</span><br></pre></td></tr></table></div></figure>\n\n<h4 id=\"使用-4\">使用<a href=\"2019/04/02/webpack的基本使用#使用-4\"></a></h4><p><code>main.js</code>中引入<code>index.scss</code></p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'./css/index.scss'</span></span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"loader处理css中的图片\">loader处理css中的图片<a href=\"2019/04/02/webpack的基本使用#loader处理css中的图片\"></a></h3><p>当css中出现引用图片时，webpack会解码出错，如</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">body &#123;</span><br><span class=\"line\">\tbackground: url(./images/temp.jpg);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>之所以出错，是由于对url的解析出错，这里需要用到url-loader；</p>\n<p>处理图片需要两个loader加载器</p>\n<ul>\n<li>url-loader</li>\n<li>file-loader</li>\n</ul>\n<h4 id=\"安装-6\">安装<a href=\"2019/04/02/webpack的基本使用#安装-6\"></a></h4><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install url-loader file-loader -D</span><br></pre></td></tr></table></div></figure>\n\n<h4 id=\"配置-3\">配置<a href=\"2019/04/02/webpack的基本使用#配置-3\"></a></h4><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"attr\">test</span>: <span class=\"regexp\">/\\.(png|jpg|gif|bmp|jpeg)$/</span>, <span class=\"attr\">use</span>: <span class=\"string\">'url-loader?limit=1024$name=[hash:8]-[name].[ext]'</span>&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>该loader会默认将要加载的图片转码为base64的字符串替换url原本的位置，使其可以直接加载在页面上；</p>\n<p>其中：</p>\n<ul>\n<li>limit 当图片大小超过此属性对应的值时，不将其转码为base64，否则转为base64</li>\n<li>name 设置由url-loader处理之后的文件名<ul>\n<li>[hash: 8] 设置文件名开头为随机的8位哈希值</li>\n<li>[name] 设置文件名结束为文件的原本名字</li>\n<li>[ext] 设置后缀名为文件原本的后缀名</li>\n</ul>\n</li>\n</ul>\n<p>示例：当文件<code>test.png</code>大小大于limit时，文件被处理为<code>3hu4ye89-test.png</code></p>\n<h4 id=\"使用-5\">使用<a href=\"2019/04/02/webpack的基本使用#使用-5\"></a></h4><p>在css中使用</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">body &#123;</span><br><span class=\"line\">  background: url(../images/test.png);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>并将此css文件引入main.js中</p>\n<h3 id=\"loader处理字体图标的问题\">loader处理字体图标的问题<a href=\"2019/04/02/webpack的基本使用#loader处理字体图标的问题\"></a></h3><p>当我们使用第三方字体图标时（如bootstrap.css）时，若文件声明某种字体时而利用url去引用其他文件时，在webpack打包时便会报错。</p>\n<p>处理图片需要一个loader加载器</p>\n<ul>\n<li>url-loader</li>\n</ul>\n<h4 id=\"安装-7\">安装<a href=\"2019/04/02/webpack的基本使用#安装-7\"></a></h4><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install url-loader -D</span><br></pre></td></tr></table></div></figure>\n\n<p>其实上一步已经安装，无需再次安装。</p>\n<h4 id=\"配置-4\">配置<a href=\"2019/04/02/webpack的基本使用#配置-4\"></a></h4><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"attr\">test</span>: <span class=\"regexp\">/\\.(ttf|eot|svg|woff|woff2)$/</span>, <span class=\"attr\">use</span>: <span class=\"string\">'url-loader'</span>&#125;</span><br></pre></td></tr></table></div></figure>\n\n<h4 id=\"使用-6\">使用<a href=\"2019/04/02/webpack的基本使用#使用-6\"></a></h4><p>这里以<code>bootstrap</code>为例：</p>\n<p>安装<code>bootstrap</code></p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install bootstrap@<span class=\"number\">3.3</span><span class=\"number\">.5</span> --save</span><br></pre></td></tr></table></div></figure>\n\n<p><code>index.html</code>中输入</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;span <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"glyphicon glyphicon-heart\"</span>&gt;&lt;/span&gt;</span><br></pre></td></tr></table></div></figure>\n\n<p><code>main.js</code>中引入</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'bootstrap/dist/css/bootstrap.css'</span></span><br></pre></td></tr></table></div></figure>\n\n<p>注意：这里不能直接引入<code>import &#39;bootstrap&#39;</code></p>\n<h2 id=\"babel的使用\">babel的使用<a href=\"2019/04/02/webpack的基本使用#babel的使用\"></a></h2><p>由于webpack只能处理部分ES6的代码，所以为了更好的兼容ES6我们需要引入babel来达到目的。将ES6以上的语法自动转换成当前浏览器可以识别的ES最高版本的语法。</p>\n<h3 id=\"安装-8\">安装<a href=\"2019/04/02/webpack的基本使用#安装-8\"></a></h3><h4 id=\"安装babel的转码工具\">安装babel的转码工具<a href=\"2019/04/02/webpack的基本使用#安装babel的转码工具\"></a></h4><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i babel-core@<span class=\"number\">6.26</span><span class=\"number\">.3</span> babel-loader@<span class=\"number\">7.1</span><span class=\"number\">.5</span> babel-plugin-transform-runtime --save-dev</span><br></pre></td></tr></table></div></figure>\n\n<h4 id=\"安装babel转换的语法\">安装babel转换的语法<a href=\"2019/04/02/webpack的基本使用#安装babel转换的语法\"></a></h4><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i babel-preset-env babel-preset-stage<span class=\"number\">-0</span> --save-dev</span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"配置-5\">配置<a href=\"2019/04/02/webpack的基本使用#配置-5\"></a></h3><p>1、在webpack.config.js中配置</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"attr\">test</span>: <span class=\"regexp\">/\\.js$/</span>, <span class=\"attr\">use</span>: <span class=\"string\">'babel-loader'</span>, <span class=\"attr\">exclude</span>: <span class=\"regexp\">/node_modules/</span>&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>2、在项目根目录下新建一个名为 <code>.babelrc</code>的babel配置文件,文件中键入内容</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">\"presets\"</span>: [<span class=\"string\">\"env\"</span>, <span class=\"string\">\"stage-0\"</span>],</span><br><span class=\"line\">    <span class=\"string\">\"plugins\"</span>: [<span class=\"string\">\"transform-runtime\"</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>注意：该文件是严格遵从<code>json</code>格式的。</p>\n<p>其中:</p>\n<ul>\n<li>presets 中配置语法插件 (相当于高级语法翻译成低级语法的字典)</li>\n<li>plugins中配置属于babel的插件（相当于翻译器）</li>\n</ul>\n","prev":{"title":"MongoDB","link":"2019/05/02/MongoDB"},"next":{"title":"React中的数据管理","link":"2019/03/16/React中的数据管理"},"plink":"http://Li_junhui.github.io.git/2019/04/02/webpack的基本使用/","toc":[{"title":"安装","id":"安装","index":"1"},{"title":"初体验","id":"初体验","index":"2"},{"title":"基本配置文件的使用","id":"基本配置文件的使用","index":"3"},{"title":"使用webpack-dev-server","id":"使用webpack-dev-server","index":"4","children":[{"title":"安装","id":"安装-1","index":"4.1"},{"title":"使用","id":"使用","index":"4.2"},{"title":"启动服务","id":"启动服务","index":"4.3"}]},{"title":"使用html-webpack-plugin","id":"使用html-webpack-plugin","index":"5"},{"title":"webpack 处理第三方不是文件类型的过程","id":"webpack-处理第三方不是文件类型的过程","index":"6"},{"title":"loader","id":"loader","index":"7","children":[{"title":"loader处理css","id":"loader处理css","index":"7.1","children":[{"title":"安装","id":"安装-3","index":"7.1.1"},{"title":"配置","id":"配置","index":"7.1.2"},{"title":"使用","id":"使用-2","index":"7.1.3"}]},{"title":"loader处理less","id":"loader处理less","index":"7.2","children":[{"title":"安装","id":"安装-4","index":"7.2.1"},{"title":"配置","id":"配置-1","index":"7.2.2"},{"title":"使用","id":"使用-3","index":"7.2.3"}]},{"title":"loader处理scss","id":"loader处理scss","index":"7.3","children":[{"title":"安装","id":"安装-5","index":"7.3.1"},{"title":"配置","id":"配置-2","index":"7.3.2"},{"title":"使用","id":"使用-4","index":"7.3.3"}]},{"title":"loader处理css中的图片","id":"loader处理css中的图片","index":"7.4","children":[{"title":"安装","id":"安装-6","index":"7.4.1"},{"title":"配置","id":"配置-3","index":"7.4.2"},{"title":"使用","id":"使用-5","index":"7.4.3"}]},{"title":"loader处理字体图标的问题","id":"loader处理字体图标的问题","index":"7.5","children":[{"title":"安装","id":"安装-7","index":"7.5.1"},{"title":"配置","id":"配置-4","index":"7.5.2"},{"title":"使用","id":"使用-6","index":"7.5.3"}]}]},{"title":"babel的使用","id":"babel的使用","index":"8","children":[{"title":"安装","id":"安装-8","index":"8.1","children":[{"title":"安装babel的转码工具","id":"安装babel的转码工具","index":"8.1.1"},{"title":"安装babel转换的语法","id":"安装babel转换的语法","index":"8.1.2"}]},{"title":"配置","id":"配置-5","index":"8.2"}]}]}